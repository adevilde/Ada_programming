with Arbre;

generic 
    lng_code : integer;
    

package code is
    type T_octet is limited private;
    type T_tab_code is limited private;
    type T_code is limited private;
    type T_tab_branche is limited private;
    
        
    procedure Lire (fichier : in string; 
                    decode : out T_code; 
                    lng_decode : out Integer) with 
            Pre => fichier /= Null,
            Post => decode'first = 1 and decode'last >= 1 and lng_decode > 0 and (decode'last - decode'first) = lng_decode;


    procedure Premiere_branche (code : in T_code; 
                                tab_branche : out T_tab_branche; 
                                lng_code : out integer; 
                                lng_diff : out integer) with
            Pre => lng_decode > 0,
            Post => tab_branche'first = 1 and tab_branche'last = lng_diff;
    
    

    procedure ArbreH (tab_branche : in T_tab_branche; 
                      lng_code : in integer; 
                      arbre : in T_arbre) with
            Pre => tab_branche'first = 1 and tab_branche'last >= 1 , lng_decode > 0;
    

    procedure Tableau_code (arbre : in T_arbre; 
                            tab_code : out T_tab_code) with
            Pre => arbre'first = 1 and arbre'last >= 1 ;
    
    
    procedure Traduire (fichier : in string; 
                        code : out T_code) with
            Pre => fichier /= Null,
            Post => code'first = 1 and code'last >= 1;
                       
    
    procedure Ecrire (code : in T_code) with
            Pre => code /= Null;
    
    
    
private
    Type T_octet is array (1..8) of integer;
    Type T_tab_code is array (1..256) of T_octet;
    Type T_code is array (1..lng_code) of integer;
    Type T_tab_branche is array (1..256) of T_arbre;
    
end code;
                    
